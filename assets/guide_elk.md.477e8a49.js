import{_ as a,c as e,o as s,N as t}from"./chunks/framework.d1fd824c.js";const b=JSON.parse('{"title":"ELK","description":"","frontmatter":{},"headers":[],"relativePath":"guide/elk.md","lastUpdated":1680973061000}'),r={name:"guide/elk.md"},l=t('<h1 id="elk" tabindex="-1">ELK <a class="header-anchor" href="#elk" aria-label="Permalink to &quot;ELK&quot;">​</a></h1><p><a href="https://www.elastic.co/cn/" target="_blank" rel="noreferrer">Elasticsearch官网</a>中提供了很多技术，其中一些技术是可以配合使用的，里面比较出名的就是ELK技术栈。</p><p>ELK是Elasticsearch、Logstash、Kibana三个软件首字母。</p><p>Elasticsearch：全文检索工具。</p><p>Kibana：页面管理工具，可以通过Kibana的管理界面操作Elasticsearch。</p><p>logstash：日志收集的工具，通过此工具可以实现日志内容收集及格式转换。</p><h2 id="elasticsearch简介" tabindex="-1">Elasticsearch简介 <a class="header-anchor" href="#elasticsearch简介" aria-label="Permalink to &quot;Elasticsearch简介&quot;">​</a></h2><p>Elasticsearch是一个基于Lucene的搜索服务器。它提供了一个分布式的全文搜索引擎，其对外服务是基于RESTful web接口发布的。Elasticsearch是用Java开发的应用，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到近实时搜索，稳定，可靠，快速，安装使用方便。</p><h3 id="功能分类" tabindex="-1">功能分类 <a class="header-anchor" href="#功能分类" aria-label="Permalink to &quot;功能分类&quot;">​</a></h3><p>Elasticsearch具备两个主要功能：</p><ul><li>搜索，功能和Solr类似。代替目前(海量数据)的MySQL模糊查询</li><li>分析，结合LogStash使用</li></ul><h3 id="相关概念" tabindex="-1">相关概念 <a class="header-anchor" href="#相关概念" aria-label="Permalink to &quot;相关概念&quot;">​</a></h3><h4 id="cluster" tabindex="-1">cluster <a class="header-anchor" href="#cluster" aria-label="Permalink to &quot;cluster&quot;">​</a></h4><p>集群。Elasticsearch集群由一个或多个节点组成，其中有一个主节点，这个主节点是可以通过选举产生的，主从节点是对于集群内部来说的。Elasticsearch的一个概念就是去中心化，字面上理解就是无中心节点，这是对于集群外部来说的，因为从外部看Elasticsearch集群，在逻辑上是个整体，你与集群中的任何一个节点通信和与整个Elasticsearch集群通信是等价的。也就是说，主节点的存在不会产生单点安全隐患、并发访问瓶颈等问题。</p><h4 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h4><p>索引，相当于关系型数据库中的表。其中存储若干相似结构的Document数据。如：客户索引，订单索引，商品索引等。Elasticsearch中的索引不像数据库表格一样有强制的数据约束，在理论上，可以存储任意结构的数据。但为了更好的业务提供搜索数据支撑，还是要设计合适的索引体系来存储不同的数据。</p><h4 id="shards" tabindex="-1">shards <a class="header-anchor" href="#shards" aria-label="Permalink to &quot;shards&quot;">​</a></h4><p>primary shard代表索引的主分片，Elasticsearch可以把一个完整的索引分成多个primary shard，这样的好处是可以把一个大的索引拆分成多个分片，分布存储在不同的Elasticsearch节点上，从而形成分布式存储，并为搜索访问提供分布式服务，提高并发处理能力。primary shard的数量只能在索引创建时指定，并且索引创建后不能更改primary shard数量。</p><h4 id="replicas" tabindex="-1">replicas <a class="header-anchor" href="#replicas" aria-label="Permalink to &quot;replicas&quot;">​</a></h4><p>replica shard：代表索引主分片的副本，Elasticsearch可以设置多个replica shard。replica shard的作用：一是提高系统的容错性，当某个节点某个primary shard损坏或丢失时可以从副本中恢复。二是提高Elasticsearch的查询效率，Elasticsearch会自动对搜索请求进行负载均衡，将并发的搜索请求发送给合适的节点，增强并发处理能力。</p><h4 id="type" tabindex="-1">Type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;Type&quot;">​</a></h4><p>类型。每个索引中都必须有唯一的一个Type，Type是Index中的一个逻辑分类。Elasticsearch中的数据Document是存储在索引下的Type中的。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Elasticsearch 5.x及更低版本中，一个Index中可以有多个Type。Elasticsearch6.x版本之后，type概念被弱化，一个index中只能有唯一的一个type。且在7.x版本之后，删除type定义。</p></div><h4 id="document" tabindex="-1">Document <a class="header-anchor" href="#document" aria-label="Permalink to &quot;Document&quot;">​</a></h4><p>文档。Elasticsearch中的最小数据单元。一个Document就是一条数据，一般使用JSON数据结构表示，每个Index下的Type中都可以存储多个Document，一个Document中可定义多个field，field就是数据字段，如：学生数据<code>({&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:20,&quot;gender&quot;:&quot;男&quot;})</code>。</p><h4 id="元数据" tabindex="-1">元数据 <a class="header-anchor" href="#元数据" aria-label="Permalink to &quot;元数据&quot;">​</a></h4><p>在Elasticsearch中所有以&quot;_&quot;开头的属性都称为元数据，都有着自己特定的函数。例如：_index:表示索引</p><h3 id="常见使用场景" tabindex="-1">常见使用场景 <a class="header-anchor" href="#常见使用场景" aria-label="Permalink to &quot;常见使用场景&quot;">​</a></h3><ul><li>维基百科：全文检索，高亮显示，搜索推荐</li><li>The Guardian(国外的一个新闻网站)，此平台可以对用户的行为(点击、浏览、收藏、评论)、社区网络数据(对新闻的评论等)进行数据分析，为新闻的发布者提供相关的公众反馈。</li><li>Stach Overflow(国外的程序异常讨论论坛)</li><li>Github(开源代码管理)，在千亿级别的代码行中搜索信息</li><li>电子商务平台等。</li></ul><h2 id="安装elasticsearch" tabindex="-1">安装Elasticsearch <a class="header-anchor" href="#安装elasticsearch" aria-label="Permalink to &quot;安装Elasticsearch&quot;">​</a></h2><p>使用的Elasticsearch的版本是7.6.2.Elasticsearch7.x要求linux内核必须是4+版本以上。在linux操作系统中，查看内核版本的命令是：uname -a。</p><h3 id="为elasticsearch提供完善的系统配置" tabindex="-1">为Elasticsearch提供完善的系统配置 <a class="header-anchor" href="#为elasticsearch提供完善的系统配置" aria-label="Permalink to &quot;为Elasticsearch提供完善的系统配置&quot;">​</a></h3><p>Elasticsearch在Linux中安装部署的时候，需要系统为其提供若干系统配置。如：应用可启动的线程数、应用可以在系统中划分的虚拟内存、应用可以最多创建多少文件等。</p><h4 id="修改限制信息" tabindex="-1">修改限制信息 <a class="header-anchor" href="#修改限制信息" aria-label="Permalink to &quot;修改限制信息&quot;">​</a></h4><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">vim</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/security/limits.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>是修改系统中允许应用最多创建多少文件等的限制权限。Linux默认来说，一般限制应用最多创建的文件是65535个。但是Elasticsearch至少需要65535的文件创建权限。修改后的内容为：</p>',36),i=[l];function c(h,o,n,d,p,u){return s(),e("div",null,i)}const q=a(r,[["render",c]]);export{b as __pageData,q as default};
